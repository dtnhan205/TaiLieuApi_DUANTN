{"ast":null,"code":"var _jsxFileName = \"F:\\\\DU AN TN\\\\TAI LIEU API\\\\TaiLieuApi_DUANTN\\\\APIDOCS\\\\src\\\\components\\\\MBBank.js\";\nimport React from 'react';\nimport EndpointItem from './EndpointItem';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MBBank = ({\n  openEndpoint,\n  setOpenEndpoint\n}) => {\n  const endpoints = [{\n    method: 'GET',\n    path: '/api/mbbankv3',\n    description: 'Lấy giao dịch MB Bank',\n    fullDescription: 'Trả về lịch sử giao dịch của tài khoản MB Bank dựa trên thông tin xác thực được cung cấp.',\n    auth: {\n      required: true,\n      header: 'Authorization: Bearer <token>',\n      description: 'Token JWT của người dùng được yêu cầu trong header.'\n    },\n    parameters: [{\n      name: 'key',\n      type: 'string',\n      description: 'Khóa API để xác thực',\n      required: true\n    }, {\n      name: 'username',\n      type: 'string',\n      description: 'Tài khoản MB Bank',\n      required: true\n    }, {\n      name: 'password',\n      type: 'string',\n      description: 'Mật khẩu MB Bank',\n      required: true\n    }, {\n      name: 'accountNo',\n      type: 'string',\n      description: 'Số tài khoản để lấy lịch sử',\n      required: true\n    }],\n    exampleUrl: 'https://apicanhan.com/api/mbbankv3?key={<span style={{ color: \"red\" }}>{key}</span>}&username={<span style={{ color: \"red\" }}>{username}</span>}&password={<span style={{ color: \"red\" }}>{password}</span>}&accountNo={<span style={{ color: \"red\" }}>{accountNo}</span>}',\n    response: {\n      status: 200,\n      description: 'Lịch sử giao dịch MB Bank',\n      example: {\n        status: 'success',\n        message: 'Thành công',\n        transactions: [{\n          transactionID: 'FT25190344823293',\n          amount: '50000',\n          description: 'CUSTOMER AEQN4S. TU: HUYNH HUY HOANG',\n          transactionDate: '2025-07-09T00:40:03Z',\n          type: 'IN'\n        }]\n      }\n    },\n    errorResponses: [{\n      status: 400,\n      description: 'Dữ liệu không hợp lệ hoặc thông tin xác thực sai'\n    }, {\n      status: 401,\n      description: 'Không có token hoặc token không hợp lệ'\n    }, {\n      status: 500,\n      description: 'Lỗi máy chủ'\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: endpoints.map((endpoint, index) => /*#__PURE__*/_jsxDEV(EndpointItem, {\n      endpoint: endpoint,\n      index: index,\n      openEndpoint: openEndpoint,\n      setOpenEndpoint: setOpenEndpoint\n    }, `${endpoint.path}-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c = MBBank;\nexport default MBBank;\nvar _c;\n$RefreshReg$(_c, \"MBBank\");","map":{"version":3,"names":["React","EndpointItem","jsxDEV","_jsxDEV","Fragment","_Fragment","MBBank","openEndpoint","setOpenEndpoint","endpoints","method","path","description","fullDescription","auth","required","header","parameters","name","type","exampleUrl","response","status","example","message","transactions","transactionID","amount","transactionDate","errorResponses","children","map","endpoint","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/DU AN TN/TAI LIEU API/TaiLieuApi_DUANTN/APIDOCS/src/components/MBBank.js"],"sourcesContent":["import React from 'react';\r\nimport EndpointItem from './EndpointItem';\r\n\r\nconst MBBank = ({ openEndpoint, setOpenEndpoint }) => {\r\n  const endpoints = [\r\n    {\r\n      method: 'GET',\r\n      path: '/api/mbbankv3',\r\n      description: 'Lấy giao dịch MB Bank',\r\n      fullDescription: 'Trả về lịch sử giao dịch của tài khoản MB Bank dựa trên thông tin xác thực được cung cấp.',\r\n      auth: {\r\n        required: true,\r\n        header: 'Authorization: Bearer <token>',\r\n        description: 'Token JWT của người dùng được yêu cầu trong header.'\r\n      },\r\n      parameters: [\r\n        { name: 'key', type: 'string', description: 'Khóa API để xác thực', required: true },\r\n        { name: 'username', type: 'string', description: 'Tài khoản MB Bank', required: true },\r\n        { name: 'password', type: 'string', description: 'Mật khẩu MB Bank', required: true },\r\n        { name: 'accountNo', type: 'string', description: 'Số tài khoản để lấy lịch sử', required: true }\r\n      ],\r\n      exampleUrl: 'https://apicanhan.com/api/mbbankv3?key={<span style={{ color: \"red\" }}>{key}</span>}&username={<span style={{ color: \"red\" }}>{username}</span>}&password={<span style={{ color: \"red\" }}>{password}</span>}&accountNo={<span style={{ color: \"red\" }}>{accountNo}</span>}',\r\n      response: {\r\n        status: 200,\r\n        description: 'Lịch sử giao dịch MB Bank',\r\n        example: {\r\n          status: 'success',\r\n          message: 'Thành công',\r\n          transactions: [\r\n            {\r\n              transactionID: 'FT25190344823293',\r\n              amount: '50000',\r\n              description: 'CUSTOMER AEQN4S. TU: HUYNH HUY HOANG',\r\n              transactionDate: '2025-07-09T00:40:03Z',\r\n              type: 'IN'\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      errorResponses: [\r\n        { status: 400, description: 'Dữ liệu không hợp lệ hoặc thông tin xác thực sai' },\r\n        { status: 401, description: 'Không có token hoặc token không hợp lệ' },\r\n        { status: 500, description: 'Lỗi máy chủ' }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {endpoints.map((endpoint, index) => (\r\n        <EndpointItem\r\n          key={`${endpoint.path}-${index}`}\r\n          endpoint={endpoint}\r\n          index={index}\r\n          openEndpoint={openEndpoint}\r\n          setOpenEndpoint={setOpenEndpoint}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MBBank;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,MAAM,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAgB,CAAC,KAAK;EACpD,MAAMC,SAAS,GAAG,CAChB;IACEC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE,eAAe;IACrBC,WAAW,EAAE,uBAAuB;IACpCC,eAAe,EAAE,2FAA2F;IAC5GC,IAAI,EAAE;MACJC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE,+BAA+B;MACvCJ,WAAW,EAAE;IACf,CAAC;IACDK,UAAU,EAAE,CACV;MAAEC,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE,QAAQ;MAAEP,WAAW,EAAE,sBAAsB;MAAEG,QAAQ,EAAE;IAAK,CAAC,EACpF;MAAEG,IAAI,EAAE,UAAU;MAAEC,IAAI,EAAE,QAAQ;MAAEP,WAAW,EAAE,mBAAmB;MAAEG,QAAQ,EAAE;IAAK,CAAC,EACtF;MAAEG,IAAI,EAAE,UAAU;MAAEC,IAAI,EAAE,QAAQ;MAAEP,WAAW,EAAE,kBAAkB;MAAEG,QAAQ,EAAE;IAAK,CAAC,EACrF;MAAEG,IAAI,EAAE,WAAW;MAAEC,IAAI,EAAE,QAAQ;MAAEP,WAAW,EAAE,6BAA6B;MAAEG,QAAQ,EAAE;IAAK,CAAC,CAClG;IACDK,UAAU,EAAE,4QAA4Q;IACxRC,QAAQ,EAAE;MACRC,MAAM,EAAE,GAAG;MACXV,WAAW,EAAE,2BAA2B;MACxCW,OAAO,EAAE;QACPD,MAAM,EAAE,SAAS;QACjBE,OAAO,EAAE,YAAY;QACrBC,YAAY,EAAE,CACZ;UACEC,aAAa,EAAE,kBAAkB;UACjCC,MAAM,EAAE,OAAO;UACff,WAAW,EAAE,sCAAsC;UACnDgB,eAAe,EAAE,sBAAsB;UACvCT,IAAI,EAAE;QACR,CAAC;MAEL;IACF,CAAC;IACDU,cAAc,EAAE,CACd;MAAEP,MAAM,EAAE,GAAG;MAAEV,WAAW,EAAE;IAAmD,CAAC,EAChF;MAAEU,MAAM,EAAE,GAAG;MAAEV,WAAW,EAAE;IAAyC,CAAC,EACtE;MAAEU,MAAM,EAAE,GAAG;MAAEV,WAAW,EAAE;IAAc,CAAC;EAE/C,CAAC,CACF;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAyB,QAAA,EACGrB,SAAS,CAACsB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7B9B,OAAA,CAACF,YAAY;MAEX+B,QAAQ,EAAEA,QAAS;MACnBC,KAAK,EAAEA,KAAM;MACb1B,YAAY,EAAEA,YAAa;MAC3BC,eAAe,EAAEA;IAAgB,GAJ5B,GAAGwB,QAAQ,CAACrB,IAAI,IAAIsB,KAAK,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKjC,CACF;EAAC,gBACF,CAAC;AAEP,CAAC;AAACC,EAAA,GAzDIhC,MAAM;AA2DZ,eAAeA,MAAM;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"F:\\\\DU AN TN\\\\TAI LIEU API\\\\TaiLieuApi_DUANTN\\\\APIDOCS\\\\src\\\\components\\\\Users.js\";\nimport React from 'react';\nimport EndpointItem from './EndpointItem';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst User = ({\n  openEndpoint,\n  setOpenEndpoint\n}) => {\n  const endpoints = [{\n    method: 'POST',\n    path: '/api/users/register',\n    description: 'Đăng ký người dùng mới',\n    fullDescription: 'Tạo tài khoản người dùng mới với các trường bắt buộc: username, phone, email, và password. Gửi email chào mừng với mã giảm giá 10%. Mật khẩu được mã hóa trước khi lưu trữ. Không yêu cầu xác thực.',\n    auth: {\n      required: false,\n      description: 'Không yêu cầu token. Endpoint này công khai.'\n    },\n    parameters: [{\n      name: 'username',\n      type: 'string',\n      description: 'Tên người dùng',\n      required: true\n    }, {\n      name: 'phone',\n      type: 'string',\n      description: 'Số điện thoại (định dạng: 0xxxxxxxxx)',\n      required: true\n    }, {\n      name: 'email',\n      type: 'string',\n      description: 'Địa chỉ email (phải là duy nhất)',\n      required: true\n    }, {\n      name: 'password',\n      type: 'string',\n      description: 'Mật khẩu (tối thiểu 8 ký tự)',\n      required: true\n    }, {\n      name: 'address',\n      type: 'string',\n      description: 'Địa chỉ người dùng',\n      required: false\n    }, {\n      name: 'birthday',\n      type: 'string',\n      description: 'Ngày sinh (định dạng ISO)',\n      required: false\n    }, {\n      name: 'listOrder',\n      type: 'array',\n      description: 'Mảng chứa các ObjectId của đơn hàng',\n      required: false\n    }],\n    requestExample: {\n      body: {\n        username: 'john_doe',\n        phone: '0987654321',\n        email: 'john.doe@example.com',\n        password: 'securepassword123',\n        address: '123 Main St, Hanoi',\n        birthday: '1990-01-01',\n        listOrder: []\n      }\n    },\n    response: {\n      status: 201,\n      description: 'Đăng ký người dùng thành công',\n      example: {\n        message: 'Đăng ký thành công! Bạn có thể đăng nhập.',\n        user: {\n          _id: '60d5f8e9b1a2b4f8e8f9e2b0',\n          username: 'john_doe',\n          phone: '0987654321',\n          email: 'john.doe@example.com',\n          address: '123 Main St, Hanoi',\n          birthday: '1990-01-01T00:00:00Z',\n          listOrder: [],\n          status: 'active',\n          role: 'user',\n          createdAt: '2025-07-09T10:18:00Z'\n        }\n      }\n    },\n    errorResponses: [{\n      status: 400,\n      description: 'Thiếu trường bắt buộc hoặc định dạng phone/email/password không hợp lệ'\n    }, {\n      status: 409,\n      description: 'Email đã tồn tại'\n    }, {\n      status: 500,\n      description: 'Lỗi server'\n    }]\n  }, {\n    method: 'POST',\n    path: '/api/users/login',\n    description: 'Đăng nhập người dùng',\n    fullDescription: 'Xác thực người dùng bằng email và mật khẩu, trả về token JWT có hiệu lực trong 1 giờ. Kiểm tra trạng thái tài khoản. Không yêu cầu xác thực.',\n    auth: {\n      required: false,\n      description: 'Không yêu cầu token. Endpoint này công khai.'\n    },\n    parameters: [{\n      name: 'email',\n      type: 'string',\n      description: 'Email người dùng',\n      required: true\n    }, {\n      name: 'password',\n      type: 'string',\n      description: 'Mật khẩu người dùng',\n      required: true\n    }],\n    requestExample: {\n      body: {\n        email: 'john.doe@example.com',\n        password: 'securepassword123'\n      }\n    },\n    response: {\n      status: 200,\n      description: 'Đăng nhập thành công',\n      example: {\n        token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',\n        message: 'Đăng nhập thành công',\n        user: {\n          id: '60d5f8e9b1a2b4f8e8f9e2b0',\n          email: 'john.doe@example.com',\n          username: 'john_doe',\n          role: 'user'\n        }\n      }\n    },\n    errorResponses: [{\n      status: 400,\n      description: 'Thiếu email hoặc mật khẩu'\n    }, {\n      status: 401,\n      description: 'Email không tồn tại hoặc mật khẩu không đúng'\n    }, {\n      status: 403,\n      description: 'Tài khoản không hoạt động hoặc bị cấm'\n    }, {\n      status: 500,\n      description: 'Lỗi server'\n    }]\n  }, {\n    method: 'POST',\n    path: '/api/users/forgot-password',\n    description: 'Yêu cầu đặt lại mật khẩu',\n    fullDescription: 'Gửi email đặt lại mật khẩu chứa token JWT (hiệu lực trong 1 giờ) đến email cung cấp. Không yêu cầu xác thực.',\n    auth: {\n      required: false,\n      description: 'Không yêu cầu token. Endpoint này công khai.'\n    },\n    parameters: [{\n      name: 'email',\n      type: 'string',\n      description: 'Email người dùng',\n      required: true\n    }],\n    requestExample: {\n      body: {\n        email: 'john.doe@example.com'\n      }\n    },\n    response: {\n      status: 200,\n      description: 'Email đặt lại mật khẩu đã được gửi',\n      example: {\n        message: 'Email đặt lại mật khẩu đã được gửi. Vui lòng kiểm tra hộp thư của bạn.'\n      }\n    },\n    errorResponses: [{\n      status: 400,\n      description: 'Thiếu hoặc email không hợp lệ'\n    }, {\n      status: 404,\n      description: 'Email không tồn tại'\n    }, {\n      status: 500,\n      description: 'Lỗi gửi email hoặc lỗi server'\n    }]\n  }, {\n    method: 'POST',\n    path: '/api/users/reset-password/:token',\n    description: 'Đặt lại mật khẩu',\n    fullDescription: 'Đặt lại mật khẩu người dùng sử dụng token JWT từ email đặt lại mật khẩu. Gửi email xác nhận. Không yêu cầu xác thực.',\n    auth: {\n      required: false,\n      description: 'Không yêu cầu token. Endpoint này công khai.'\n    },\n    parameters: [{\n      name: 'token',\n      type: 'string',\n      description: 'Token JWT đặt lại',\n      required: true\n    }, {\n      name: 'newPassword',\n      type: 'string',\n      description: 'Mật khẩu mới (tối thiểu 8 ký tự)',\n      required: true\n    }],\n    requestExample: {\n      body: {\n        newPassword: 'newpassword123'\n      }\n    },\n    response: {\n      status: 200,\n      description: 'Đặt lại mật khẩu thành công',\n      example: {\n        message: 'Đặt lại mật khẩu thành công!'\n      }\n    },\n    errorResponses: [{\n      status: 400,\n      description: 'Thiếu hoặc mật khẩu mới không hợp lệ, hoặc token không hợp lệ/đã hết hạn'\n    }, {\n      status: 404,\n      description: 'Token không khớp hoặc người dùng không tồn tại'\n    }, {\n      status: 500,\n      description: 'Lỗi server'\n    }]\n  }, {\n    method: 'GET',\n    path: '/api/users/userinfo',\n    description: 'Lấy thông tin người dùng đã xác thực',\n    fullDescription: 'Trả về thông tin của người dùng đã xác thực, loại bỏ các trường nhạy cảm như mật khẩu. Yêu cầu token JWT hợp lệ.',\n    auth: {\n      required: true,\n      header: 'Authorization: Bearer <token>',\n      description: 'Yêu cầu token JWT của người dùng trong header.'\n    },\n    parameters: [],\n    response: {\n      status: 200,\n      description: 'Thông tin người dùng',\n      example: {\n        _id: '60d5f8e9b1a2b4f8e8f9e2b0',\n        username: 'john_doe',\n        phone: '0987654321',\n        email: 'john.doe@example.com',\n        address: '123 Main St, Hanoi',\n        birthday: '1990-01-01T00:00:00Z',\n        listOrder: [],\n        status: 'active',\n        role: 'user',\n        createdAt: '2025-07-09T10:18:00Z'\n      }\n    },\n    errorResponses: [{\n      status: 401,\n      description: 'Không có token hoặc token không hợp lệ/đã hết hạn'\n    }, {\n      status: 404,\n      description: 'Không tìm thấy người dùng'\n    }, {\n      status: 500,\n      description: 'Lỗi server'\n    }]\n  }, {\n    method: 'GET',\n    path: '/api/users',\n    description: 'Lấy danh sách tất cả người dùng',\n    fullDescription: 'Trả về danh sách tất cả người dùng, loại bỏ các trường nhạy cảm như mật khẩu. Yêu cầu quyền admin và token JWT hợp lệ.',\n    auth: {\n      required: true,\n      header: 'Authorization: Bearer <token>',\n      description: 'Yêu cầu token JWT của admin trong header.'\n    },\n    parameters: [],\n    response: {\n      status: 200,\n      description: 'Danh sách tất cả người dùng',\n      example: [{\n        _id: '60d5f8e9b1a2b4f8e8f9e2b0',\n        username: 'john_doe',\n        phone: '0987654321',\n        email: 'john.doe@example.com',\n        address: '123 Main St, Hanoi',\n        birthday: '1990-01-01T00:00:00Z',\n        listOrder: [],\n        status: 'active',\n        role: 'user',\n        createdAt: '2025-07-09T10:18:00Z'\n      }]\n    },\n    errorResponses: [{\n      status: 401,\n      description: 'Không có token hoặc token không hợp lệ/đã hết hạn'\n    }, {\n      status: 403,\n      description: 'Không phải admin'\n    }, {\n      status: 404,\n      description: 'Không tìm thấy người dùng nào'\n    }, {\n      status: 500,\n      description: 'Lỗi server'\n    }]\n  }, {\n    method: 'GET',\n    path: '/api/users/:id',\n    description: 'Lấy thông tin người dùng theo ID',\n    fullDescription: 'Trả về chi tiết người dùng theo ID, loại bỏ các trường nhạy cảm như mật khẩu. Yêu cầu quyền admin và token JWT hợp lệ.',\n    auth: {\n      required: true,\n      header: 'Authorization: Bearer <token>',\n      description: 'Yêu cầu token JWT của admin trong header.'\n    },\n    parameters: [{\n      name: 'id',\n      type: 'string',\n      description: 'ObjectId của người dùng',\n      required: true\n    }],\n    response: {\n      status: 200,\n      description: 'Chi tiết người dùng',\n      example: {\n        _id: '60d5f8e9b1a2b4f8e8f9e2b0',\n        username: 'john_doe',\n        phone: '0987654321',\n        email: 'john.doe@example.com',\n        address: '123 Main St, Hanoi',\n        birthday: '1990-01-01T00:00:00Z',\n        listOrder: [],\n        status: 'active',\n        role: 'user',\n        createdAt: '2025-07-09T10:18:00Z'\n      }\n    },\n    errorResponses: [{\n      status: 401,\n      description: 'Không có token hoặc token không hợp lệ/đã hết hạn'\n    }, {\n      status: 403,\n      description: 'Không phải admin'\n    }, {\n      status: 404,\n      description: 'Không tìm thấy người dùng'\n    }, {\n      status: 500,\n      description: 'Lỗi server'\n    }]\n  }, {\n    method: 'PUT',\n    path: '/api/users/update/:id',\n    description: 'Cập nhật thông tin người dùng',\n    fullDescription: 'Cập nhật thông tin người dùng như username, phone, email, address, birthday, status, hoặc role. Người dùng có thể cập nhật thông tin của mình, hoặc admin có thể cập nhật thông tin của bất kỳ người dùng nào. Yêu cầu token JWT hợp lệ.',\n    auth: {\n      required: true,\n      header: 'Authorization: Bearer <token>',\n      description: 'Yêu cầu token JWT của người dùng hoặc admin trong header.'\n    },\n    parameters: [{\n      name: 'id',\n      type: 'string',\n      description: 'ObjectId của người dùng',\n      required: true\n    }, {\n      name: 'username',\n      type: 'string',\n      description: 'Tên người dùng mới',\n      required: false\n    }, {\n      name: 'phone',\n      type: 'string',\n      description: 'Số điện thoại mới (định dạng: 0xxxxxxxxx)',\n      required: false\n    }, {\n      name: 'email',\n      type: 'string',\n      description: 'Địa chỉ email mới',\n      required: false\n    }, {\n      name: 'address',\n      type: 'string',\n      description: 'Địa chỉ mới',\n      required: false\n    }, {\n      name: 'birthday',\n      type: 'string',\n      description: 'Ngày sinh mới (định dạng ISO)',\n      required: false\n    }, {\n      name: 'status',\n      type: 'string',\n      description: 'Trạng thái mới (active, inactive, banned)',\n      required: false\n    }, {\n      name: 'role',\n      type: 'string',\n      description: 'Vai trò mới (user, admin)',\n      required: false\n    }],\n    requestExample: {\n      headers: {\n        'Authorization': 'Bearer <token>'\n      },\n      body: {\n        username: 'john_doe_updated',\n        phone: '0912345678',\n        email: 'john.doe.new@example.com',\n        address: '456 New St, Hanoi',\n        birthday: '1990-01-02',\n        status: 'active',\n        role: 'user'\n      }\n    },\n    response: {\n      status: 200,\n      description: 'Cập nhật người dùng thành công',\n      example: {\n        message: 'Cập nhật thành công',\n        user: {\n          _id: '60d5f8e9b1a2b4f8e8f9e2b0',\n          username: 'john_doe_updated',\n          phone: '0912345678',\n          email: 'john.doe.new@example.com',\n          address: '456 New St, Hanoi',\n          birthday: '1990-01-02T00:00:00Z',\n          listOrder: [],\n          status: 'active',\n          role: 'user',\n          createdAt: '2025-07-09T10:18:00Z'\n        }\n      }\n    },\n    errorResponses: [{\n      status: 401,\n      description: 'Không có token hoặc token không hợp lệ/đã hết hạn'\n    }, {\n      status: 403,\n      description: 'Người dùng không có quyền cập nhật người dùng này'\n    }, {\n      status: 404,\n      description: 'Không tìm thấy người dùng'\n    }, {\n      status: 500,\n      description: 'Lỗi server'\n    }]\n  }, {\n    method: 'DELETE',\n    path: '/api/users/:id',\n    description: 'Xóa người dùng',\n    fullDescription: 'Xóa người dùng theo ID. Chỉ admin có thể xóa người dùng. Yêu cầu token JWT hợp lệ.',\n    auth: {\n      required: true,\n      header: 'Authorization: Bearer <token>',\n      description: 'Yêu cầu token JWT của admin trong header.'\n    },\n    parameters: [{\n      name: 'id',\n      type: 'string',\n      description: 'ObjectId của người dùng',\n      required: true\n    }],\n    response: {\n      status: 200,\n      description: 'Xóa người dùng thành công',\n      example: {\n        message: 'Xóa người dùng thành công'\n      }\n    },\n    errorResponses: [{\n      status: 401,\n      description: 'Không có token hoặc token không hợp lệ/đã hết hạn'\n    }, {\n      status: 403,\n      description: 'Không phải admin hoặc không có quyền'\n    }, {\n      status: 404,\n      description: 'Không tìm thấy người dùng'\n    }, {\n      status: 500,\n      description: 'Lỗi server'\n    }]\n  }, {\n    method: 'PUT',\n    path: '/api/users/change-password/:id',\n    description: 'Đổi mật khẩu người dùng',\n    fullDescription: 'Đổi mật khẩu người dùng sau khi xác minh mật khẩu cũ. Gửi email xác nhận. Người dùng có thể đổi mật khẩu của mình, hoặc admin có thể đổi mật khẩu của bất kỳ người dùng nào. Yêu cầu token JWT hợp lệ.',\n    auth: {\n      required: true,\n      header: 'Authorization: Bearer <token>',\n      description: 'Yêu cầu token JWT của người dùng hoặc admin trong header.'\n    },\n    parameters: [{\n      name: 'id',\n      type: 'string',\n      description: 'ObjectId của người dùng',\n      required: true\n    }, {\n      name: 'oldPassword',\n      type: 'string',\n      description: 'Mật khẩu hiện tại',\n      required: true\n    }, {\n      name: 'newPassword',\n      type: 'string',\n      description: 'Mật khẩu mới (tối thiểu 8 ký tự)',\n      required: true\n    }],\n    requestExample: {\n      headers: {\n        'Authorization': 'Bearer <token>'\n      },\n      body: {\n        oldPassword: 'securepassword123',\n        newPassword: 'newpassword123'\n      }\n    },\n    response: {\n      status: 200,\n      description: 'Đổi mật khẩu thành công',\n      example: {\n        message: 'Đổi mật khẩu thành công'\n      }\n    },\n    errorResponses: [{\n      status: 400,\n      description: 'Thiếu oldPassword/newPassword hoặc mật khẩu mới quá ngắn'\n    }, {\n      status: 401,\n      description: 'Mật khẩu cũ không đúng'\n    }, {\n      status: 403,\n      description: 'Người dùng không có quyền đổi mật khẩu này'\n    }, {\n      status: 404,\n      description: 'Không tìm thấy người dùng'\n    }, {\n      status: 500,\n      description: 'Lỗi server'\n    }]\n  }, {\n    method: 'GET',\n    path: '/api/users/google',\n    description: 'Bắt đầu đăng nhập bằng Google OAuth',\n    fullDescription: 'Chuyển hướng đến trang ủy quyền OAuth 2.0 của Google để xác thực người dùng. Không yêu cầu xác thực.',\n    auth: {\n      required: false,\n      description: 'Không yêu cầu token. Endpoint này công khai.'\n    },\n    parameters: [],\n    response: {\n      status: 302,\n      description: 'Chuyển hướng đến trang OAuth của Google',\n      example: {\n        redirect: 'https://accounts.google.com/o/oauth2/auth?client_id=...&redirect_uri=...&scope=...&response_type=code'\n      }\n    },\n    errorResponses: [{\n      status: 500,\n      description: 'Lỗi server'\n    }]\n  }, {\n    method: 'GET',\n    path: '/api/users/google/callback',\n    description: 'Xử lý callback từ Google OAuth',\n    fullDescription: 'Xử lý callback từ Google OAuth, xác thực người dùng và thường chuyển hướng với token JWT hoặc đến trang frontend. Không yêu cầu xác thực.',\n    auth: {\n      required: false,\n      description: 'Không yêu cầu token. Endpoint này công khai.'\n    },\n    parameters: [{\n      name: 'code',\n      type: 'string',\n      description: 'Mã ủy quyền từ Google',\n      required: true,\n      in: 'query'\n    }],\n    response: {\n      status: 302,\n      description: 'Chuyển hướng đến frontend với token hoặc trang thành công',\n      example: {\n        redirect: 'https://purebotanica.com/auth/success?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'\n      }\n    },\n    errorResponses: [{\n      status: 400,\n      description: 'Mã ủy quyền không hợp lệ hoặc thiếu'\n    }, {\n      status: 500,\n      description: 'Lỗi server'\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: endpoints.map((endpoint, index) => /*#__PURE__*/_jsxDEV(EndpointItem, {\n      endpoint: endpoint,\n      index: index,\n      openEndpoint: openEndpoint,\n      setOpenEndpoint: setOpenEndpoint\n    }, `${endpoint.path}-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","EndpointItem","jsxDEV","_jsxDEV","Fragment","_Fragment","User","openEndpoint","setOpenEndpoint","endpoints","method","path","description","fullDescription","auth","required","parameters","name","type","requestExample","body","username","phone","email","password","address","birthday","listOrder","response","status","example","message","user","_id","role","createdAt","errorResponses","token","id","newPassword","header","headers","oldPassword","redirect","in","children","map","endpoint","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/DU AN TN/TAI LIEU API/TaiLieuApi_DUANTN/APIDOCS/src/components/Users.js"],"sourcesContent":["import React from 'react';\r\nimport EndpointItem from './EndpointItem';\r\n\r\nconst User = ({ openEndpoint, setOpenEndpoint }) => {\r\n  const endpoints = [\r\n    {\r\n      method: 'POST',\r\n      path: '/api/users/register',\r\n      description: 'Đăng ký người dùng mới',\r\n      fullDescription: 'Tạo tài khoản người dùng mới với các trường bắt buộc: username, phone, email, và password. Gửi email chào mừng với mã giảm giá 10%. Mật khẩu được mã hóa trước khi lưu trữ. Không yêu cầu xác thực.',\r\n      auth: {\r\n        required: false,\r\n        description: 'Không yêu cầu token. Endpoint này công khai.'\r\n      },\r\n      parameters: [\r\n        { name: 'username', type: 'string', description: 'Tên người dùng', required: true },\r\n        { name: 'phone', type: 'string', description: 'Số điện thoại (định dạng: 0xxxxxxxxx)', required: true },\r\n        { name: 'email', type: 'string', description: 'Địa chỉ email (phải là duy nhất)', required: true },\r\n        { name: 'password', type: 'string', description: 'Mật khẩu (tối thiểu 8 ký tự)', required: true },\r\n        { name: 'address', type: 'string', description: 'Địa chỉ người dùng', required: false },\r\n        { name: 'birthday', type: 'string', description: 'Ngày sinh (định dạng ISO)', required: false },\r\n        { name: 'listOrder', type: 'array', description: 'Mảng chứa các ObjectId của đơn hàng', required: false }\r\n      ],\r\n      requestExample: {\r\n        body: {\r\n          username: 'john_doe',\r\n          phone: '0987654321',\r\n          email: 'john.doe@example.com',\r\n          password: 'securepassword123',\r\n          address: '123 Main St, Hanoi',\r\n          birthday: '1990-01-01',\r\n          listOrder: []\r\n        }\r\n      },\r\n      response: {\r\n        status: 201,\r\n        description: 'Đăng ký người dùng thành công',\r\n        example: {\r\n          message: 'Đăng ký thành công! Bạn có thể đăng nhập.',\r\n          user: {\r\n            _id: '60d5f8e9b1a2b4f8e8f9e2b0',\r\n            username: 'john_doe',\r\n            phone: '0987654321',\r\n            email: 'john.doe@example.com',\r\n            address: '123 Main St, Hanoi',\r\n            birthday: '1990-01-01T00:00:00Z',\r\n            listOrder: [],\r\n            status: 'active',\r\n            role: 'user',\r\n            createdAt: '2025-07-09T10:18:00Z'\r\n          }\r\n        }\r\n      },\r\n      errorResponses: [\r\n        { status: 400, description: 'Thiếu trường bắt buộc hoặc định dạng phone/email/password không hợp lệ' },\r\n        { status: 409, description: 'Email đã tồn tại' },\r\n        { status: 500, description: 'Lỗi server' }\r\n      ]\r\n    },\r\n    {\r\n      method: 'POST',\r\n      path: '/api/users/login',\r\n      description: 'Đăng nhập người dùng',\r\n      fullDescription: 'Xác thực người dùng bằng email và mật khẩu, trả về token JWT có hiệu lực trong 1 giờ. Kiểm tra trạng thái tài khoản. Không yêu cầu xác thực.',\r\n      auth: {\r\n        required: false,\r\n        description: 'Không yêu cầu token. Endpoint này công khai.'\r\n      },\r\n      parameters: [\r\n        { name: 'email', type: 'string', description: 'Email người dùng', required: true },\r\n        { name: 'password', type: 'string', description: 'Mật khẩu người dùng', required: true }\r\n      ],\r\n      requestExample: {\r\n        body: {\r\n          email: 'john.doe@example.com',\r\n          password: 'securepassword123'\r\n        }\r\n      },\r\n      response: {\r\n        status: 200,\r\n        description: 'Đăng nhập thành công',\r\n        example: {\r\n          token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',\r\n          message: 'Đăng nhập thành công',\r\n          user: {\r\n            id: '60d5f8e9b1a2b4f8e8f9e2b0',\r\n            email: 'john.doe@example.com',\r\n            username: 'john_doe',\r\n            role: 'user'\r\n          }\r\n        }\r\n      },\r\n      errorResponses: [\r\n        { status: 400, description: 'Thiếu email hoặc mật khẩu' },\r\n        { status: 401, description: 'Email không tồn tại hoặc mật khẩu không đúng' },\r\n        { status: 403, description: 'Tài khoản không hoạt động hoặc bị cấm' },\r\n        { status: 500, description: 'Lỗi server' }\r\n      ]\r\n    },\r\n    {\r\n      method: 'POST',\r\n      path: '/api/users/forgot-password',\r\n      description: 'Yêu cầu đặt lại mật khẩu',\r\n      fullDescription: 'Gửi email đặt lại mật khẩu chứa token JWT (hiệu lực trong 1 giờ) đến email cung cấp. Không yêu cầu xác thực.',\r\n      auth: {\r\n        required: false,\r\n        description: 'Không yêu cầu token. Endpoint này công khai.'\r\n      },\r\n      parameters: [\r\n        { name: 'email', type: 'string', description: 'Email người dùng', required: true }\r\n      ],\r\n      requestExample: {\r\n        body: {\r\n          email: 'john.doe@example.com'\r\n        }\r\n      },\r\n      response: {\r\n        status: 200,\r\n        description: 'Email đặt lại mật khẩu đã được gửi',\r\n        example: {\r\n          message: 'Email đặt lại mật khẩu đã được gửi. Vui lòng kiểm tra hộp thư của bạn.'\r\n        }\r\n      },\r\n      errorResponses: [\r\n        { status: 400, description: 'Thiếu hoặc email không hợp lệ' },\r\n        { status: 404, description: 'Email không tồn tại' },\r\n        { status: 500, description: 'Lỗi gửi email hoặc lỗi server' }\r\n      ]\r\n    },\r\n    {\r\n      method: 'POST',\r\n      path: '/api/users/reset-password/:token',\r\n      description: 'Đặt lại mật khẩu',\r\n      fullDescription: 'Đặt lại mật khẩu người dùng sử dụng token JWT từ email đặt lại mật khẩu. Gửi email xác nhận. Không yêu cầu xác thực.',\r\n      auth: {\r\n        required: false,\r\n        description: 'Không yêu cầu token. Endpoint này công khai.'\r\n      },\r\n      parameters: [\r\n        { name: 'token', type: 'string', description: 'Token JWT đặt lại', required: true },\r\n        { name: 'newPassword', type: 'string', description: 'Mật khẩu mới (tối thiểu 8 ký tự)', required: true }\r\n      ],\r\n      requestExample: {\r\n        body: {\r\n          newPassword: 'newpassword123'\r\n        }\r\n      },\r\n      response: {\r\n        status: 200,\r\n        description: 'Đặt lại mật khẩu thành công',\r\n        example: {\r\n          message: 'Đặt lại mật khẩu thành công!'\r\n        }\r\n      },\r\n      errorResponses: [\r\n        { status: 400, description: 'Thiếu hoặc mật khẩu mới không hợp lệ, hoặc token không hợp lệ/đã hết hạn' },\r\n        { status: 404, description: 'Token không khớp hoặc người dùng không tồn tại' },\r\n        { status: 500, description: 'Lỗi server' }\r\n      ]\r\n    },\r\n    {\r\n      method: 'GET',\r\n      path: '/api/users/userinfo',\r\n      description: 'Lấy thông tin người dùng đã xác thực',\r\n      fullDescription: 'Trả về thông tin của người dùng đã xác thực, loại bỏ các trường nhạy cảm như mật khẩu. Yêu cầu token JWT hợp lệ.',\r\n      auth: {\r\n        required: true,\r\n        header: 'Authorization: Bearer <token>',\r\n        description: 'Yêu cầu token JWT của người dùng trong header.'\r\n      },\r\n      parameters: [],\r\n      response: {\r\n        status: 200,\r\n        description: 'Thông tin người dùng',\r\n        example: {\r\n          _id: '60d5f8e9b1a2b4f8e8f9e2b0',\r\n          username: 'john_doe',\r\n          phone: '0987654321',\r\n          email: 'john.doe@example.com',\r\n          address: '123 Main St, Hanoi',\r\n          birthday: '1990-01-01T00:00:00Z',\r\n          listOrder: [],\r\n          status: 'active',\r\n          role: 'user',\r\n          createdAt: '2025-07-09T10:18:00Z'\r\n        }\r\n      },\r\n      errorResponses: [\r\n        { status: 401, description: 'Không có token hoặc token không hợp lệ/đã hết hạn' },\r\n        { status: 404, description: 'Không tìm thấy người dùng' },\r\n        { status: 500, description: 'Lỗi server' }\r\n      ]\r\n    },\r\n    {\r\n      method: 'GET',\r\n      path: '/api/users',\r\n      description: 'Lấy danh sách tất cả người dùng',\r\n      fullDescription: 'Trả về danh sách tất cả người dùng, loại bỏ các trường nhạy cảm như mật khẩu. Yêu cầu quyền admin và token JWT hợp lệ.',\r\n      auth: {\r\n        required: true,\r\n        header: 'Authorization: Bearer <token>',\r\n        description: 'Yêu cầu token JWT của admin trong header.'\r\n      },\r\n      parameters: [],\r\n      response: {\r\n        status: 200,\r\n        description: 'Danh sách tất cả người dùng',\r\n        example: [\r\n          {\r\n            _id: '60d5f8e9b1a2b4f8e8f9e2b0',\r\n            username: 'john_doe',\r\n            phone: '0987654321',\r\n            email: 'john.doe@example.com',\r\n            address: '123 Main St, Hanoi',\r\n            birthday: '1990-01-01T00:00:00Z',\r\n            listOrder: [],\r\n            status: 'active',\r\n            role: 'user',\r\n            createdAt: '2025-07-09T10:18:00Z'\r\n          }\r\n        ]\r\n      },\r\n      errorResponses: [\r\n        { status: 401, description: 'Không có token hoặc token không hợp lệ/đã hết hạn' },\r\n        { status: 403, description: 'Không phải admin' },\r\n        { status: 404, description: 'Không tìm thấy người dùng nào' },\r\n        { status: 500, description: 'Lỗi server' }\r\n      ]\r\n    },\r\n    {\r\n      method: 'GET',\r\n      path: '/api/users/:id',\r\n      description: 'Lấy thông tin người dùng theo ID',\r\n      fullDescription: 'Trả về chi tiết người dùng theo ID, loại bỏ các trường nhạy cảm như mật khẩu. Yêu cầu quyền admin và token JWT hợp lệ.',\r\n      auth: {\r\n        required: true,\r\n        header: 'Authorization: Bearer <token>',\r\n        description: 'Yêu cầu token JWT của admin trong header.'\r\n      },\r\n      parameters: [\r\n        { name: 'id', type: 'string', description: 'ObjectId của người dùng', required: true }\r\n      ],\r\n      response: {\r\n        status: 200,\r\n        description: 'Chi tiết người dùng',\r\n        example: {\r\n          _id: '60d5f8e9b1a2b4f8e8f9e2b0',\r\n          username: 'john_doe',\r\n          phone: '0987654321',\r\n          email: 'john.doe@example.com',\r\n          address: '123 Main St, Hanoi',\r\n          birthday: '1990-01-01T00:00:00Z',\r\n          listOrder: [],\r\n          status: 'active',\r\n          role: 'user',\r\n          createdAt: '2025-07-09T10:18:00Z'\r\n        }\r\n      },\r\n      errorResponses: [\r\n        { status: 401, description: 'Không có token hoặc token không hợp lệ/đã hết hạn' },\r\n        { status: 403, description: 'Không phải admin' },\r\n        { status: 404, description: 'Không tìm thấy người dùng' },\r\n        { status: 500, description: 'Lỗi server' }\r\n      ]\r\n    },\r\n    {\r\n      method: 'PUT',\r\n      path: '/api/users/update/:id',\r\n      description: 'Cập nhật thông tin người dùng',\r\n      fullDescription: 'Cập nhật thông tin người dùng như username, phone, email, address, birthday, status, hoặc role. Người dùng có thể cập nhật thông tin của mình, hoặc admin có thể cập nhật thông tin của bất kỳ người dùng nào. Yêu cầu token JWT hợp lệ.',\r\n      auth: {\r\n        required: true,\r\n        header: 'Authorization: Bearer <token>',\r\n        description: 'Yêu cầu token JWT của người dùng hoặc admin trong header.'\r\n      },\r\n      parameters: [\r\n        { name: 'id', type: 'string', description: 'ObjectId của người dùng', required: true },\r\n        { name: 'username', type: 'string', description: 'Tên người dùng mới', required: false },\r\n        { name: 'phone', type: 'string', description: 'Số điện thoại mới (định dạng: 0xxxxxxxxx)', required: false },\r\n        { name: 'email', type: 'string', description: 'Địa chỉ email mới', required: false },\r\n        { name: 'address', type: 'string', description: 'Địa chỉ mới', required: false },\r\n        { name: 'birthday', type: 'string', description: 'Ngày sinh mới (định dạng ISO)', required: false },\r\n        { name: 'status', type: 'string', description: 'Trạng thái mới (active, inactive, banned)', required: false },\r\n        { name: 'role', type: 'string', description: 'Vai trò mới (user, admin)', required: false }\r\n      ],\r\n      requestExample: {\r\n        headers: { 'Authorization': 'Bearer <token>' },\r\n        body: {\r\n          username: 'john_doe_updated',\r\n          phone: '0912345678',\r\n          email: 'john.doe.new@example.com',\r\n          address: '456 New St, Hanoi',\r\n          birthday: '1990-01-02',\r\n          status: 'active',\r\n          role: 'user'\r\n        }\r\n      },\r\n      response: {\r\n        status: 200,\r\n        description: 'Cập nhật người dùng thành công',\r\n        example: {\r\n          message: 'Cập nhật thành công',\r\n          user: {\r\n            _id: '60d5f8e9b1a2b4f8e8f9e2b0',\r\n            username: 'john_doe_updated',\r\n            phone: '0912345678',\r\n            email: 'john.doe.new@example.com',\r\n            address: '456 New St, Hanoi',\r\n            birthday: '1990-01-02T00:00:00Z',\r\n            listOrder: [],\r\n            status: 'active',\r\n            role: 'user',\r\n            createdAt: '2025-07-09T10:18:00Z'\r\n          }\r\n        }\r\n      },\r\n      errorResponses: [\r\n        { status: 401, description: 'Không có token hoặc token không hợp lệ/đã hết hạn' },\r\n        { status: 403, description: 'Người dùng không có quyền cập nhật người dùng này' },\r\n        { status: 404, description: 'Không tìm thấy người dùng' },\r\n        { status: 500, description: 'Lỗi server' }\r\n      ]\r\n    },\r\n    {\r\n      method: 'DELETE',\r\n      path: '/api/users/:id',\r\n      description: 'Xóa người dùng',\r\n      fullDescription: 'Xóa người dùng theo ID. Chỉ admin có thể xóa người dùng. Yêu cầu token JWT hợp lệ.',\r\n      auth: {\r\n        required: true,\r\n        header: 'Authorization: Bearer <token>',\r\n        description: 'Yêu cầu token JWT của admin trong header.'\r\n      },\r\n      parameters: [\r\n        { name: 'id', type: 'string', description: 'ObjectId của người dùng', required: true }\r\n      ],\r\n      response: {\r\n        status: 200,\r\n        description: 'Xóa người dùng thành công',\r\n        example: {\r\n          message: 'Xóa người dùng thành công'\r\n        }\r\n      },\r\n      errorResponses: [\r\n        { status: 401, description: 'Không có token hoặc token không hợp lệ/đã hết hạn' },\r\n        { status: 403, description: 'Không phải admin hoặc không có quyền' },\r\n        { status: 404, description: 'Không tìm thấy người dùng' },\r\n        { status: 500, description: 'Lỗi server' }\r\n      ]\r\n    },\r\n    {\r\n      method: 'PUT',\r\n      path: '/api/users/change-password/:id',\r\n      description: 'Đổi mật khẩu người dùng',\r\n      fullDescription: 'Đổi mật khẩu người dùng sau khi xác minh mật khẩu cũ. Gửi email xác nhận. Người dùng có thể đổi mật khẩu của mình, hoặc admin có thể đổi mật khẩu của bất kỳ người dùng nào. Yêu cầu token JWT hợp lệ.',\r\n      auth: {\r\n        required: true,\r\n        header: 'Authorization: Bearer <token>',\r\n        description: 'Yêu cầu token JWT của người dùng hoặc admin trong header.'\r\n      },\r\n      parameters: [\r\n        { name: 'id', type: 'string', description: 'ObjectId của người dùng', required: true },\r\n        { name: 'oldPassword', type: 'string', description: 'Mật khẩu hiện tại', required: true },\r\n        { name: 'newPassword', type: 'string', description: 'Mật khẩu mới (tối thiểu 8 ký tự)', required: true }\r\n      ],\r\n      requestExample: {\r\n        headers: { 'Authorization': 'Bearer <token>' },\r\n        body: {\r\n          oldPassword: 'securepassword123',\r\n          newPassword: 'newpassword123'\r\n        }\r\n      },\r\n      response: {\r\n        status: 200,\r\n        description: 'Đổi mật khẩu thành công',\r\n        example: {\r\n          message: 'Đổi mật khẩu thành công'\r\n        }\r\n      },\r\n      errorResponses: [\r\n        { status: 400, description: 'Thiếu oldPassword/newPassword hoặc mật khẩu mới quá ngắn' },\r\n        { status: 401, description: 'Mật khẩu cũ không đúng' },\r\n        { status: 403, description: 'Người dùng không có quyền đổi mật khẩu này' },\r\n        { status: 404, description: 'Không tìm thấy người dùng' },\r\n        { status: 500, description: 'Lỗi server' }\r\n      ]\r\n    },\r\n    {\r\n      method: 'GET',\r\n      path: '/api/users/google',\r\n      description: 'Bắt đầu đăng nhập bằng Google OAuth',\r\n      fullDescription: 'Chuyển hướng đến trang ủy quyền OAuth 2.0 của Google để xác thực người dùng. Không yêu cầu xác thực.',\r\n      auth: {\r\n        required: false,\r\n        description: 'Không yêu cầu token. Endpoint này công khai.'\r\n      },\r\n      parameters: [],\r\n      response: {\r\n        status: 302,\r\n        description: 'Chuyển hướng đến trang OAuth của Google',\r\n        example: {\r\n          redirect: 'https://accounts.google.com/o/oauth2/auth?client_id=...&redirect_uri=...&scope=...&response_type=code'\r\n        }\r\n      },\r\n      errorResponses: [\r\n        { status: 500, description: 'Lỗi server' }\r\n      ]\r\n    },\r\n    {\r\n      method: 'GET',\r\n      path: '/api/users/google/callback',\r\n      description: 'Xử lý callback từ Google OAuth',\r\n      fullDescription: 'Xử lý callback từ Google OAuth, xác thực người dùng và thường chuyển hướng với token JWT hoặc đến trang frontend. Không yêu cầu xác thực.',\r\n      auth: {\r\n        required: false,\r\n        description: 'Không yêu cầu token. Endpoint này công khai.'\r\n      },\r\n      parameters: [\r\n        { name: 'code', type: 'string', description: 'Mã ủy quyền từ Google', required: true, in: 'query' }\r\n      ],\r\n      response: {\r\n        status: 302,\r\n        description: 'Chuyển hướng đến frontend với token hoặc trang thành công',\r\n        example: {\r\n          redirect: 'https://purebotanica.com/auth/success?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'\r\n        }\r\n      },\r\n      errorResponses: [\r\n        { status: 400, description: 'Mã ủy quyền không hợp lệ hoặc thiếu' },\r\n        { status: 500, description: 'Lỗi server' }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {endpoints.map((endpoint, index) => (\r\n        <EndpointItem\r\n          key={`${endpoint.path}-${index}`}\r\n          endpoint={endpoint}\r\n          index={index}\r\n          openEndpoint={openEndpoint}\r\n          setOpenEndpoint={setOpenEndpoint}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default User;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}